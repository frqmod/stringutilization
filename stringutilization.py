#!/usr/bin/env python3
import sys
import argparse
import re
from collections import OrderedDict
from logging import getLogger, ERROR

try:
    from angr import Project
except ImportError:
    sys.stderr.write("Cannot find package: 'angr'. Install it via pip3 with:\n")
    sys.stderr.write("\tpip3 install angr\n")
    sys.exit(-1)

getLogger("angr").setLevel(ERROR + 1)
getLogger("claripy").setLevel(ERROR + 1)


def parseargv(arguments):
    parser = argparse.ArgumentParser(
        description=__doc__, formatter_class=argparse.RawDescriptionHelpFormatter
    )
    parser.add_argument("infile", help="Input file", type=argparse.FileType("rb"))
    parser.add_argument(
        "-o",
        "--outfile",
        help="Output file",
        default=sys.stdout,
        type=argparse.FileType("w"),
    )
    parser.add_argument(
        "-f",
        "--function",
        help="Function name to check for usage in",
        default=None,
        type=str,
    )
    parser.add_argument(
        "-n",
        "--numchars",
        help="Minimum number of printable characters for a string",
        default=4,
        type=int,
    )
    parser.add_argument(
        "-s",
        "--searchstring",
        help="Only show strings that contain this substring",
        default=None,
        type=str,
    )
    parser.add_argument(
        "-a",
        "--address",
        help="Attempts to find a string at a given address",
        default=None,
        type=lambda x: int(x, 0),
    )
    parser.add_argument(
        "-i",
        "--ignorenonuser",
        help="[EXPERIMENTAL] Attempts to ignore strings only found in library functions",
        action="store_true",
    )

    return parser.parse_args(arguments)


def get_string(offset, fc, n_chars):
    output_buffer = []
    for i in range(offset, len(fc)):
        if chr(fc[i]).isprintable():
            output_buffer.append(chr(fc[i]))
        else:
            break
    return "" if len(output_buffer) <= n_chars else "".join(output_buffer)


def main(args):
    # check if we're writing to a file
    if args.outfile != sys.stdout:
        sys.stdout = args.outfile
    elif not args.address:
        print(
            "processing.. (may take a while for larger/static binaries)\n", flush=True
        )

    if args.ignorenonuser:
        print(
            "[WARNING] Attempting to ignore library strings.. results may be inaccurate.."
        )

    # first, read/store the binary since we're going to be searching in it a lot
    binary_content = b""
    with args.infile as f:
        binary_content += f.read()

    # begin processing with angr (finding all functions)
    # create angr project
    p = Project(args.infile.name, load_options={"auto_load_libs": False})
    binary_base = p.loader.min_addr

    # check if we're just searching at one addr
    if args.address:
        if args.address > binary_base:
            args.address -= binary_base
        output = get_string(args.address, binary_content, args.numchars)
        if len(output) == 0:
            print(
                f"ERROR: String not found at offset {hex(args.address)} with base address {hex(binary_base)}"
            )
            exit(-1)
        else:
            print(f"{hex(args.address+binary_base)}: {repr(output)}")
            exit(0)

    # try to generate cfg
    try:
        cfg = p.analyses.CFGFast()
    except Exception:
        print("ERROR: Binary is too complex.")
        exit(-1)

    # load all functions
    funcs = OrderedDict()
    funcaddrs = {}
    for addr, val in cfg.kb.functions.items():
        funcs[val.name] = val
        funcaddrs[addr] = [val.name]
    # sort all functions by address
    funcs = OrderedDict(sorted(funcs.items(), key=lambda x: x[1].addr))

    # now, parse every function's assembly for values from the binary
    strings = OrderedDict()
    p = re.compile(r"0[xX][0-9a-fA-F]+")  # regex to find hex numbers e.g. 0x380b
    for fname, func in funcs.items():
        # check if we're targeting a specific function, if we are, use that
        if args.function:
            fname = args.function
            func = funcs[fname]
        if args.ignorenonuser and fname in libc_funcs:
            continue
        try:  # try since sometimes we can get weird errors parsing
            # grab the diassembly for the current function
            disasm = func.project.analyses.Disassembly(func).render(
                ascii_only=True, show_edges=False, formatting={}
            )
            for inst in disasm.split("\n"):
                # parse address of instruction
                addr = inst.split(" ")[0]
                if not addr:
                    addr = ""
                else:
                    addr = int(addr, 16)
                # get all hex numbers
                nums = p.findall(inst)
                # if we found any, iterate over them
                for num in nums if nums else []:
                    num = int(num, 16)
                    # if num is too small or a function location
                    if num < binary_base or num in funcaddrs.keys():
                        continue
                    # otherwise try to get a string at the location
                    output = get_string(
                        num - binary_base, binary_content, args.numchars
                    )
                    # store it
                    if len(output) > 0 and output in strings:
                        strings[output] += [(fname, addr)]
                        break
                    strings[output] = [num, (fname, addr)]

        except Exception:
            pass

        if args.function:
            break

    printc = 0
    for k, v in strings.items():
        if args.searchstring and not re.search(args.searchstring, k, re.IGNORECASE):
            continue
        printc += 1
        print(f"{hex(v[0])}: {repr(k)}")
        padding = len(hex(v[0])) + 2
        for loc in v[1:]:
            print(f"{' '*padding}{loc[0]} @ {hex(loc[1])}")
        print("")

    if printc == 0 and args.searchstring:
        print(f"ERROR: No found strings contain {args.searchstring}")

    if args.outfile:
        sys.stdout.close()


libc_funcs = [
    "__do_global_dtors_aux",
    "__libc_csu_init",
    "__libpthread_freeres",
    "malloc",
    "__libdl_freeres",
    "free",
    "realloc",
    "abort",
    "__libc_init_first",
    "__libc_start_main",
    "gnu_get_libc_release",
    "gnu_get_libc_version",
    "_start",
    "__errno_location",
    "iconv_open",
    "iconv",
    "iconv_close",
    "__gconv_get_modules_db",
    "__gconv_get_alias_db",
    "__gconv_transliterate",
    "__gconv_get_cache",
    "setlocale",
    "localeconv",
    "nl_langinfo",
    "nl_langinfo_l",
    "__ctype_get_mb_cur_max",
    "newlocale",
    "__duplocale",
    "freelocale",
    "__uselocale",
    "__assert_fail",
    "__assert_perror_fail",
    "__assert",
    "isalnum",
    "isalpha",
    "iscntrl",
    "isdigit",
    "islower",
    "isgraph",
    "isprint",
    "ispunct",
    "isspace",
    "isupper",
    "isxdigit",
    "tolower",
    "toupper",
    "isblank",
    "_tolower",
    "_toupper",
    "toascii",
    "isascii",
    "__isblank_l",
    "__isalnum_l",
    "__isalpha_l",
    "__iscntrl_l",
    "__isdigit_l",
    "islower_l",
    "isgraph_l",
    "__isprint_l",
    "__ispunct_l",
    "__isspace_l",
    "__isupper_l",
    "isxdigit_l",
    "tolower_l",
    "__toupper_l",
    "__isctype",
    "__ctype_b_loc",
    "__ctype_toupper_loc",
    "__ctype_tolower_loc",
    "__ctype_init",
    "bindtextdomain",
    "bind_textdomain_codeset",
    "__dcgettext",
    "__dgettext",
    "gettext",
    "dcngettext",
    "dngettext",
    "ngettext",
    "textdomain",
    "catopen",
    "catgets",
    "catclose",
    "__open_catalog",
    "isinfl",
    "isnanl",
    "__finitel",
    "copysignl",
    "modfl",
    "frexpl",
    "__signbitl",
    "scalbnl",
    "__isinf",
    "__isnan",
    "__finite",
    "copysign",
    "modf",
    "frexp",
    "__signbit",
    "ldexp",
    "isinff",
    "isnanf",
    "__finitef",
    "copysignf",
    "modff",
    "frexpf",
    "__signbitf",
    "scalbnf",
    "__sigsetjmp",
    "setjmp",
    "_setjmp",
    "__libc_siglongjmp",
    "__libc_longjmp",
    "ssignal",
    "raise",
    "killpg",
    "__sigaction",
    "sigprocmask",
    "kill",
    "sigpending",
    "__sigsuspend",
    "sigwait",
    "sigblock",
    "sigsetmask",
    "__sigpause",
    "sigpause",
    "__xpg_sigpause",
    "sigvec",
    "sigstack",
    "sigaltstack",
    "siginterrupt",
    "sigemptyset",
    "sigfillset",
    "sigaddset",
    "sigdelset",
    "sigismember",
    "sigreturn",
    "siggetmask",
    "__sysv_signal",
    "sigisemptyset",
    "sigandset",
    "sigorset",
    "__libc_current_sigrtmin",
    "__libc_current_sigrtmax_private",
    "__libc_allocate_rtsig",
    "sigtimedwait",
    "sigwaitinfo",
    "sigqueue",
    "sighold",
    "sigrelse",
    "sigignore",
    "sigset",
    "atof",
    "atoi",
    "atol",
    "atoll",
    "bsearch",
    "qsort_r",
    "qsort",
    "getenv",
    "putenv",
    "setenv",
    "unsetenv",
    "clearenv",
    "secure_getenv",
    "exit",
    "on_exit",
    "__cxa_atexit",
    "__cxa_finalize",
    "quick_exit",
    "__cxa_at_quick_exit",
    "__cxa_thread_atexit_impl",
    "__call_tls_dtors",
    "abs",
    "labs",
    "llabs",
    "div",
    "ldiv",
    "lldiv",
    "mblen",
    "mbstowcs",
    "mbtowc",
    "wcstombs",
    "wctomb",
    "srandom",
    "initstate",
    "setstate",
    "random",
    "srandom_r",
    "initstate_r",
    "setstate_r",
    "random_r",
    "rand",
    "rand_r",
    "drand48",
    "erand48",
    "lrand48",
    "nrand48",
    "mrand48",
    "jrand48",
    "srand48",
    "seed48",
    "lcong48",
    "drand48_r",
    "erand48_r",
    "lrand48_r",
    "nrand48_r",
    "mrand48_r",
    "jrand48_r",
    "srand48_r",
    "seed48_r",
    "lcong48_r",
    "getrandom",
    "getentropy",
    "strfromf",
    "strfromf32x",
    "strfroml",
    "__strtol_internal",
    "strtoq",
    "__strtoul_internal",
    "strtoull",
    "__strtol_l",
    "__strtoull_l",
    "__strtof_internal",
    "strtof32",
    "__strtod_internal",
    "strtof64",
    "__strtold_internal",
    "strtof64x",
    "__strtof_l",
    "strtod_l",
    "strtof64x_l",
    "__strtof_nan",
    "__strtod_nan",
    "__strtold_nan",
    "system",
    "realpath",
    "canonicalize_file_name",
    "a64l",
    "l64a",
    "rpmatch",
    "strfmon",
    "__strfmon_l",
    "getsubopt",
    "__xpg_basename",
    "fmtmsg",
    "addseverity",
    "strtoimax",
    "strtoumax",
    "wcstoimax",
    "wcstoumax",
    "getcontext",
    "setcontext",
    "makecontext",
    "swapcontext",
    "strfromf128",
    "__strtof128_internal",
    "strtof128",
    "strtof128_l",
    "__strtof128_nan",
    "ctermid",
    "cuserid",
    "vfprintf",
    "vprintf",
    "__printf_fp",
    "register_printf_specifier",
    "register_printf_function",
    "parse_printf_format",
    "register_printf_modifier",
    "register_printf_type",
    "printf_size",
    "printf_size_info",
    "fprintf",
    "printf",
    "snprintf",
    "_IO_sprintf",
    "__asprintf",
    "dprintf",
    "vfwprintf",
    "__vfscanf",
    "vfwscanf",
    "fscanf",
    "scanf",
    "sscanf",
    "perror",
    "psignal",
    "tmpfile64",
    "tmpnam",
    "tmpnam_r",
    "tempnam",
    "getline",
    "getw",
    "putw",
    "remove",
    "rename",
    "renameat",
    "renameat2",
    "_IO_flockfile",
    "_IO_ftrylockfile",
    "funlockfile",
    "__isoc99_scanf",
    "__isoc99_vscanf",
    "__isoc99_fscanf",
    "__isoc99_vfscanf",
    "__isoc99_sscanf",
    "__isoc99_vsscanf",
    "psiginfo",
    "_IO_file_doallocate",
    "_IO_fclose",
    "_IO_fdopen",
    "_IO_fflush",
    "fgetpos64",
    "_IO_fgets",
    "fopen64",
    "fopencookie",
    "_IO_fputs",
    "_IO_fread",
    "_IO_fsetpos64",
    "_IO_ftell",
    "_IO_fwrite",
    "__getdelim",
    "_IO_getline_info",
    "_IO_getline",
    "_IO_gets",
    "_IO_padn",
    "_IO_proc_close",
    "_IO_proc_open",
    "_IO_popen",
    "puts",
    "_IO_seekoff",
    "_IO_seekpos",
    "_IO_setbuffer",
    "setvbuf",
    "ungetc",
    "_IO_vsprintf",
    "__vsscanf",
    "fputwc",
    "fputwc_unlocked",
    "getwc",
    "fgetwc_unlocked",
    "getwchar",
    "getwchar_unlocked",
    "fgetws",
    "fgetws_unlocked",
    "fputws",
    "fputws_unlocked",
    "ungetwc",
    "putwc",
    "putwc_unlocked",
    "putwchar",
    "putwchar_unlocked",
    "putchar",
    "putchar_unlocked",
    "fwprintf",
    "swprintf",
    "vwprintf",
    "wprintf",
    "wscanf",
    "fwscanf",
    "vwscanf",
    "vswprintf",
    "vswscanf",
    "swscanf",
    "_IO_least_wmarker",
    "_IO_switch_to_main_wget_area",
    "_IO_switch_to_wbackup_area",
    "_IO_wsetb",
    "_IO_wdefault_pbackfail",
    "_IO_wdefault_finish",
    "_IO_wdefault_uflow",
    "__woverflow",
    "_IO_wdefault_xsputn",
    "_IO_wdoallocbuf",
    "_IO_wdefault_doallocate",
    "_IO_switch_to_wget_mode",
    "__wuflow",
    "__wunderflow",
    "_IO_wdefault_xsgetn",
    "_IO_free_wbackup_area",
    "_IO_sputbackwc",
    "_IO_sungetwc",
    "_IO_adjust_wcolumn",
    "_IO_init_wmarker",
    "_IO_wmarker_delta",
    "_IO_seekwmark",
    "_IO_unsave_wmarkers",
    "_IO_wfile_underflow",
    "_IO_wfile_seekoff",
    "_IO_wdo_write",
    "_IO_wfile_overflow",
    "_IO_wfile_sync",
    "_IO_wfile_xsputn",
    "fwide",
    "open_wmemstream",
    "clearerr",
    "feof",
    "ferror",
    "fileno",
    "fputc",
    "freopen",
    "fseek",
    "_IO_getc",
    "getchar",
    "open_memstream",
    "pclose",
    "putc",
    "rewind",
    "setbuf",
    "setlinebuf",
    "vasprintf",
    "vdprintf",
    "vscanf",
    "__vsnprintf",
    "obstack_vprintf",
    "obstack_printf",
    "fcloseall",
    "fseeko",
    "ftello",
    "freopen64",
    "__fbufsize",
    "__freading",
    "__fwriting",
    "__freadable",
    "__fwritable",
    "__flbf",
    "__fpurge",
    "__fpending",
    "__fsetlocking",
    "__libc_fatal",
    "fmemopen",
    "fmemopen",
    "__libc_readline_unlocked",
    "clearerr_unlocked",
    "feof_unlocked",
    "ferror_unlocked",
    "fputc_unlocked",
    "fgetc_unlocked",
    "getchar_unlocked",
    "fflush_unlocked",
    "putc_unlocked",
    "_IO_peekc_locked",
    "fread_unlocked",
    "fwrite_unlocked",
    "fgets_unlocked",
    "fputs_unlocked",
    "_IO_file_sync",
    "_IO_file_close",
    "_IO_file_setbuf",
    "_IO_file_seek",
    "_IO_file_seekoff",
    "_IO_file_stat",
    "_IO_file_write",
    "_IO_file_read",
    "_IO_file_xsputn",
    "_IO_file_init",
    "_IO_file_close_it",
    "_IO_file_finish",
    "_IO_file_open",
    "_IO_file_fopen",
    "_IO_file_attach",
    "_IO_do_write",
    "_IO_file_underflow",
    "_IO_file_overflow",
    "_IO_un_link",
    "_IO_link_in",
    "_IO_switch_to_get_mode",
    "_IO_free_backup_area",
    "__overflow",
    "__underflow",
    "__uflow",
    "_IO_setb",
    "_IO_doallocbuf",
    "_IO_default_uflow",
    "_IO_default_xsputn",
    "_IO_sgetn",
    "_IO_default_xsgetn",
    "_IO_default_doallocate",
    "_IO_enable_locks",
    "_IO_init",
    "_IO_default_finish",
    "_IO_sputbackc",
    "_IO_sungetc",
    "_IO_adjust_column",
    "_IO_flush_all",
    "_flushlbf",
    "_IO_init_marker",
    "_IO_remove_marker",
    "_IO_marker_difference",
    "_IO_marker_delta",
    "_IO_seekmark",
    "_IO_unsave_markers",
    "_IO_default_pbackfail",
    "_IO_iter_begin",
    "_IO_iter_end",
    "_IO_iter_next",
    "_IO_iter_file",
    "_IO_list_lock",
    "_IO_list_unlock",
    "_IO_list_resetlock",
    "_IO_str_underflow",
    "_IO_str_overflow",
    "_IO_str_pbackfail",
    "_IO_str_init_static",
    "_IO_str_init_readonly",
    "_IO_str_seekoff",
    "__libc_alloca_cutoff",
    "pthread_attr_getschedpolicy",
    "pthread_attr_setschedpolicy",
    "pthread_attr_getscope",
    "pthread_attr_setscope",
    "pthread_condattr_destroy",
    "pthread_condattr_init",
    "pthread_cond_broadcast",
    "pthread_cond_destroy",
    "pthread_cond_init",
    "pthread_cond_signal",
    "pthread_cond_wait",
    "pthread_cond_timedwait",
    "pthread_exit",
    "pthread_getschedparam",
    "pthread_setschedparam",
    "pthread_mutex_destroy",
    "pthread_mutex_init",
    "pthread_mutex_lock",
    "pthread_mutex_unlock",
    "pthread_setcancelstate",
    "pthread_setcanceltype",
    "__libc_pthread_init",
    "__register_atfork",
    "pthread_self",
    "thrd_current",
    "thrd_equal",
    "thrd_sleep",
    "thrd_yield",
    "pthread_equal",
    "pthread_attr_destroy",
    "pthread_attr_init",
    "pthread_attr_getdetachstate",
    "pthread_attr_setdetachstate",
    "pthread_attr_getinheritsched",
    "pthread_attr_setinheritsched",
    "pthread_attr_getschedparam",
    "pthread_attr_setschedparam",
    "malloc",
    "free",
    "__libc_realloc",
    "aligned_alloc",
    "valloc",
    "__libc_pvalloc",
    "calloc",
    "malloc_trim",
    "malloc_usable_size",
    "mallinfo",
    "malloc_stats",
    "mallopt",
    "posix_memalign",
    "malloc_info",
    "__default_morecore",
    "mcheck_check_all",
    "mcheck",
    "mcheck_pedantic",
    "mprobe",
    "tr_break",
    "mtrace",
    "muntrace",
    "_obstack_begin",
    "_obstack_begin_1",
    "_obstack_newchunk",
    "_obstack_allocated_p",
    "_obstack_free",
    "_obstack_memory_used",
    "reallocarray",
    "__libc_scratch_buffer_grow",
    "__libc_scratch_buffer_grow_preserve",
    "__libc_scratch_buffer_set_array_size",
    "__libc_dynarray_at_failure",
    "__libc_dynarray_emplace_enlarge",
    "__libc_dynarray_finalize",
    "__libc_dynarray_resize",
    "__libc_dynarray_resize_clear",
    "__libc_alloc_buffer_alloc_array",
    "__libc_alloc_buffer_allocate",
    "__libc_alloc_buffer_copy_bytes",
    "__libc_alloc_buffer_copy_string",
    "__libc_alloc_buffer_create_failure",
    "__libc_thread_freeres",
    "strcat",
    "strchr",
    "strcmp",
    "strcoll",
    "strcpy",
    "strcspn",
    "strverscmp",
    "strdup",
    "__strndup",
    "strerror",
    "strerror_r",
    "strlen",
    "strnlen",
    "strncat",
    "strncmp",
    "strncpy",
    "rindex",
    "strpbrk",
    "strsignal",
    "strspn",
    "strstr",
    "strtok",
    "__strtok_r",
    "strxfrm",
    "memchr",
    "bcmp",
    "memmove",
    "memset",
    "__mempcpy",
    "bcopy",
    "__ffs",
    "ffsll",
    "stpcpy",
    "__stpncpy",
    "strcasecmp",
    "strncasecmp",
    "strcasecmp_l",
    "strncasecmp_l",
    "memccpy",
    "memcpy",
    "strsep",
    "__strcasestr",
    "swab",
    "strfry",
    "memfrob",
    "memmem",
    "rawmemchr",
    "strchrnul",
    "argz_append",
    "argz_add",
    "__argz_count",
    "argz_create",
    "argz_create_sep",
    "__argz_next",
    "argz_delete",
    "argz_extract",
    "argz_insert",
    "__argz_stringify",
    "argz_add_sep",
    "argz_replace",
    "envz_entry",
    "envz_get",
    "envz_remove",
    "envz_add",
    "envz_merge",
    "envz_strip",
    "basename",
    "__strcoll_l",
    "__strxfrm_l",
    "__strtok_r_1c",
    "__strsep_1c",
    "__strsep_2c",
    "__strsep_3c",
    "__strcspn_c1",
    "__strcspn_c2",
    "__strcspn_c3",
    "__strspn_c1",
    "__strspn_c2",
    "__strspn_c3",
    "__strpbrk_c2",
    "__strpbrk_c3",
    "__mempcpy_small",
    "__strcpy_small",
    "__stpcpy_small",
    "memrchr",
    "__xpg_strerror_r",
    "strerror_l",
    "explicit_bzero",
    "memcpy",
    "__bzero",
    "wcscat",
    "wcschr",
    "wcscmp",
    "wcscpy",
    "wcscspn",
    "wcsdup",
    "wcslen",
    "wcsncat",
    "wcsncmp",
    "wcsncpy",
    "wcspbrk",
    "wcsrchr",
    "wcsspn",
    "wcstok",
    "wcsstr",
    "wmemchr",
    "wmemcmp",
    "wmemcpy",
    "wmemmove",
    "wmemset",
    "wcpcpy",
    "wcpncpy",
    "wmempcpy",
    "btowc",
    "wctob",
    "mbsinit",
    "mbrlen",
    "__mbrtowc",
    "wcrtomb",
    "mbsrtowcs",
    "wcsrtombs",
    "mbsnrtowcs",
    "wcsnrtombs",
    "wcsnlen",
    "wcschrnul",
    "__wcstoll_internal",
    "wcstoq",
    "__wcstoul_internal",
    "wcstoull",
    "__wcstod_internal",
    "wcstod",
    "__wcstold_internal",
    "wcstof64x",
    "__wcstof_internal",
    "wcstof",
    "wcstol_l",
    "wcstoull_l",
    "wcstof64_l",
    "__wcstold_l",
    "wcstof_l",
    "wcscoll",
    "wcsxfrm",
    "wcwidth",
    "wcswidth",
    "wcscoll_l",
    "__wcsxfrm_l",
    "wcscasecmp",
    "wcsncasecmp",
    "wcscasecmp_l",
    "__wcsncasecmp_l",
    "__isoc99_wscanf",
    "__isoc99_vwscanf",
    "__isoc99_fwscanf",
    "__isoc99_vfwscanf",
    "__isoc99_swscanf",
    "__isoc99_vswscanf",
    "mbrtoc16",
    "c16rtomb",
    "mbrtoc32",
    "c32rtomb",
    "wcstof128_l",
    "__wcstof128_internal",
    "wcstof128",
    "asctime_r",
    "asctime",
    "clock",
    "ctime",
    "ctime_r",
    "difftime",
    "gmtime_r",
    "gmtime",
    "localtime_r",
    "localtime",
    "mktime",
    "time",
    "gettimeofday",
    "settimeofday",
    "adjtime",
    "tzset",
    "getitimer",
    "setitimer",
    "dysize",
    "timegm",
    "ftime",
    "getdate_r",
    "getdate",
    "strptime",
    "strptime_l",
    "strftime",
    "wcsftime",
    "__strftime_l",
    "__wcsftime_l",
    "timespec_get",
    "clock_getcpuclockid",
    "clock_getres",
    "clock_gettime",
    "clock_settime",
    "clock_nanosleep",
    "ntp_gettime",
    "ntp_gettimex",
    "opendir",
    "closedir",
    "rewinddir",
    "seekdir",
    "telldir",
    "getdents64",
    "dirfd",
    "readdir64",
    "readdir64_r",
    "scandir64",
    "alphasort",
    "versionsort64",
    "fdopendir",
    "scandirat64",
    "getdirentries64",
    "fgetgrent",
    "getgrouplist",
    "initgroups",
    "setgroups",
    "getgrent",
    "getgrgid",
    "getgrnam",
    "putgrent",
    "setgrent",
    "endgrent",
    "getgrent_r",
    "getgrgid_r",
    "getgrnam_r",
    "_nss_files_parse_grent",
    "fgetgrent_r",
    "__copy_grp",
    "__merge_grp",
    "fgetpwent",
    "getpw",
    "putpwent",
    "getpwent",
    "getpwnam",
    "getpwuid",
    "setpwent",
    "endpwent",
    "getpwent_r",
    "getpwnam_r",
    "getpwuid_r",
    "_nss_files_parse_pwent",
    "fgetpwent_r",
    "uname",
    "times",
    "__wait",
    "__waitpid",
    "wait3",
    "wait4",
    "waitid",
    "alarm",
    "sleep",
    "pause",
    "__nanosleep",
    "fork",
    "__vfork",
    "_Exit",
    "execve",
    "fexecve",
    "execv",
    "execle",
    "execl",
    "execvp",
    "execlp",
    "execvpe",
    "__getpid",
    "getppid",
    "getuid",
    "geteuid",
    "getgid",
    "getegid",
    "getgroups",
    "setuid",
    "setgid",
    "group_member",
    "__getpgid",
    "__setpgid",
    "getpgrp",
    "__bsd_getpgrp",
    "setpgrp",
    "getsid",
    "setsid",
    "getresuid",
    "getresgid",
    "setresuid",
    "setresgid",
    "pathconf",
    "sysconf",
    "fpathconf",
    "glob",
    "globfree",
    "glob_pattern_p",
    "fnmatch",
    "re_compile_pattern",
    "re_set_syntax",
    "re_compile_fastmap",
    "regcomp",
    "regerror",
    "regfree",
    "re_comp",
    "regexec",
    "re_match",
    "re_search",
    "re_match_2",
    "re_search_2",
    "re_set_registers",
    "re_exec",
    "confstr",
    "getopt",
    "__posix_getopt",
    "getopt_long",
    "getopt_long_only",
    "sched_setparam",
    "sched_getparam",
    "__sched_setscheduler",
    "sched_getscheduler",
    "sched_yield",
    "sched_get_priority_max",
    "__sched_get_priority_min",
    "sched_rr_get_interval",
    "sched_getaffinity",
    "sched_setaffinity",
    "getaddrinfo",
    "freeaddrinfo",
    "gai_strerror",
    "wordfree",
    "wordexp",
    "pread",
    "pwrite64",
    "posix_spawn_file_actions_init",
    "posix_spawn_file_actions_destroy",
    "posix_spawn_file_actions_addclose",
    "posix_spawn_file_actions_addopen",
    "posix_spawn_file_actions_adddup2",
    "posix_spawn_file_actions_addchdir_np",
    "posix_spawn_file_actions_addfchdir_np",
    "posix_spawnattr_init",
    "posix_spawnattr_destroy",
    "posix_spawnattr_getsigdefault",
    "posix_spawnattr_setsigdefault",
    "posix_spawnattr_getflags",
    "posix_spawnattr_setflags",
    "posix_spawnattr_getpgroup",
    "posix_spawnattr_setpgroup",
    "posix_spawn",
    "posix_spawnp",
    "posix_spawnattr_getsigmask",
    "posix_spawnattr_getschedpolicy",
    "posix_spawnattr_getschedparam",
    "posix_spawnattr_setsigmask",
    "posix_spawnattr_setschedpolicy",
    "posix_spawnattr_setschedparam",
    "posix_madvise",
    "__sched_cpucount",
    "__sched_cpualloc",
    "__sched_cpufree",
    "sched_getcpu",
    "getcpu",
    "utime",
    "mkfifo",
    "mkfifoat",
    "__xstat",
    "__fxstat",
    "__lxstat64",
    "statx",
    "__xmknod",
    "__xmknodat",
    "__fxstatat",
    "statfs64",
    "fstatfs64",
    "statvfs",
    "fstatvfs64",
    "umask",
    "chmod",
    "fchmod",
    "lchmod",
    "fchmodat",
    "mkdir",
    "mkdirat",
    "__open_2",
    "open",
    "__open64_2",
    "__openat_2",
    "openat64",
    "__openat64_2",
    "read",
    "write",
    "lseek64",
    "access",
    "euidaccess",
    "faccessat",
    "__fcntl",
    "flock",
    "lockf",
    "lockf64",
    "__close",
    "dup",
    "dup2",
    "dup3",
    "__pipe",
    "pipe2",
    "creat",
    "chdir",
    "fchdir",
    "getcwd",
    "getwd",
    "get_current_dir_name",
    "chown",
    "fchown",
    "lchown",
    "fchownat",
    "ttyname",
    "ttyname_r",
    "isatty",
    "link",
    "linkat",
    "symlink",
    "symlinkat",
    "readlink",
    "readlinkat",
    "unlink",
    "unlinkat",
    "rmdir",
    "ftw",
    "nftw",
    "fts_open",
    "fts64_close",
    "fts64_read",
    "fts_set",
    "fts_children",
    "poll",
    "ppoll",
    "posix_fadvise64",
    "posix_fallocate",
    "posix_fallocate64",
    "sendfile64",
    "copy_file_range",
    "utimensat",
    "futimens",
    "sync_file_range",
    "fallocate64",
    "__close_nocancel",
    "__open_nocancel",
    "__read_nocancel",
    "__pread64_nocancel",
    "__write_nocancel",
    "cfgetospeed",
    "cfgetispeed",
    "cfsetospeed",
    "cfsetispeed",
    "cfsetspeed",
    "tcsetattr",
    "tcgetattr",
    "tcgetpgrp",
    "tcsetpgrp",
    "tcdrain",
    "tcflow",
    "tcflush",
    "tcsendbreak",
    "cfmakeraw",
    "tcgetsid",
    "getrlimit",
    "setrlimit",
    "getrusage",
    "ulimit",
    "vlimit",
    "vtimes",
    "getpriority",
    "setpriority",
    "nice",
    "brk",
    "sbrk",
    "sstk",
    "ioctl",
    "readv",
    "writev",
    "preadv",
    "pwritev64",
    "preadv64v2",
    "pwritev64v2",
    "setreuid",
    "setregid",
    "seteuid",
    "setegid",
    "__getpagesize",
    "getdtablesize",
    "gethostname",
    "sethostname",
    "getdomainname",
    "setdomainname",
    "select",
    "pselect",
    "acct",
    "chroot",
    "fsync",
    "sync",
    "fdatasync",
    "syncfs",
    "reboot",
    "gethostid",
    "sethostid",
    "revoke",
    "vhangup",
    "swapon",
    "swapoff",
    "mktemp",
    "mkstemp64",
    "mkdtemp",
    "mkostemp",
    "mkstemps",
    "mkostemps",
    "ualarm",
    "usleep",
    "gtty",
    "stty",
    "ptrace",
    "setfsent",
    "getfsent",
    "getfsspec",
    "getfsfile",
    "endfsent",
    "getmntent",
    "__setmntent",
    "__endmntent",
    "getmntent_r",
    "addmntent",
    "hasmntopt",
    "utimes",
    "lutimes",
    "futimes",
    "futimesat",
    "truncate64",
    "ftruncate64",
    "chflags",
    "fchflags",
    "insque",
    "remque",
    "getttynam",
    "getttyent",
    "setttyent",
    "endttyent",
    "getusershell",
    "endusershell",
    "setusershell",
    "getpass",
    "ttyslot",
    "syslog",
    "vsyslog",
    "__syslog_chk",
    "__vsyslog_chk",
    "openlog",
    "closelog",
    "setlogmask",
    "syscall",
    "daemon",
    "mmap",
    "munmap",
    "__mprotect",
    "msync",
    "__madvise",
    "mincore",
    "remap_file_pages",
    "mlock",
    "munlock",
    "mlockall",
    "munlockall",
    "fcvt",
    "ecvt",
    "gcvt",
    "fcvt_r",
    "ecvt_r",
    "qfcvt",
    "qecvt",
    "qgcvt",
    "qfcvt_r",
    "qecvt_r",
    "hdestroy",
    "hsearch",
    "hcreate",
    "hcreate_r",
    "hdestroy_r",
    "hsearch_r",
    "__tsearch",
    "__tfind",
    "__tdelete",
    "__twalk",
    "twalk_r",
    "tdestroy",
    "lsearch",
    "lfind",
    "vwarn",
    "vwarnx",
    "warn",
    "warnx",
    "verr",
    "verrx",
    "err",
    "errx",
    "error",
    "error_at_line",
    "ustat",
    "get_nprocs",
    "get_nprocs_conf",
    "get_phys_pages",
    "get_avphys_pages",
    "dirname",
    "getloadavg",
    "fgetxattr",
    "flistxattr",
    "fremovexattr",
    "fsetxattr",
    "getxattr",
    "listxattr",
    "lgetxattr",
    "llistxattr",
    "lremovexattr",
    "lsetxattr",
    "removexattr",
    "setxattr",
    "__getauxval",
    "__libc_ifunc_impl_list",
    "gnu_dev_major",
    "gnu_dev_minor",
    "gnu_dev_makedev",
    "__libc_allocate_once_slow",
    "ioperm",
    "iopl",
    "sysctl",
    "adjtimex",
    "__clone",
    "umount",
    "umount2",
    "readahead",
    "setfsuid",
    "setfsgid",
    "epoll_pwait",
    "signalfd",
    "eventfd",
    "eventfd_read",
    "eventfd_write",
    "prlimit64",
    "personality",
    "epoll_wait",
    "tee",
    "vmsplice",
    "splice",
    "open_by_handle_at",
    "mlock2",
    "pkey_mprotect",
    "pkey_set",
    "pkey_get",
    "arch_prctl",
    "modify_ldt",
    "fanotify_mark",
    "capget",
    "capset",
    "clock_adjtime",
    "create_module",
    "delete_module",
    "epoll_create",
    "epoll_create1",
    "epoll_ctl",
    "get_kernel_syms",
    "init_module",
    "inotify_add_watch",
    "inotify_init",
    "inotify_init1",
    "inotify_rm_watch",
    "klogctl",
    "mount",
    "mremap",
    "nfsservctl",
    "pivot_root",
    "prctl",
    "query_module",
    "quotactl",
    "sysinfo",
    "unshare",
    "uselib",
    "timerfd_create",
    "timerfd_settime",
    "timerfd_gettime",
    "fanotify_init",
    "name_to_handle_at",
    "setns",
    "process_vm_readv",
    "process_vm_writev",
    "memfd_create",
    "pkey_alloc",
    "pkey_free",
    "gettid",
    "tgkill",
    "bdflush",
    "accept",
    "bind",
    "__connect",
    "getpeername",
    "getsockname",
    "getsockopt",
    "listen",
    "recv",
    "recvfrom",
    "recvmsg",
    "send",
    "sendmsg",
    "sendto",
    "setsockopt",
    "shutdown",
    "__socket",
    "socketpair",
    "isfdtype",
    "sockatmark",
    "accept4",
    "recvmmsg",
    "sendmmsg",
    "__libc_sa_len",
    "__cmsg_nxthdr",
    "ftok",
    "msgsnd",
    "__libc_msgrcv",
    "msgget",
    "msgctl",
    "semop",
    "semget",
    "semctl",
    "semtimedop",
    "shmat",
    "shmdt",
    "shmget",
    "shmctl",
    "moncontrol",
    "monstartup",
    "_mcleanup",
    "profil",
    "sprofil",
    "__profile_frequency",
    "mcount",
    "__fentry__",
    "iswalnum",
    "iswalpha",
    "iswblank",
    "iswcntrl",
    "iswdigit",
    "iswlower",
    "iswgraph",
    "iswprint",
    "iswpunct",
    "iswspace",
    "iswupper",
    "iswxdigit",
    "towlower",
    "towupper",
    "wctype",
    "iswctype",
    "wctrans",
    "__towctrans",
    "iswalnum_l",
    "iswalpha_l",
    "iswblank_l",
    "__iswcntrl_l",
    "__iswdigit_l",
    "iswlower_l",
    "iswgraph_l",
    "iswprint_l",
    "iswpunct_l",
    "iswspace_l",
    "iswupper_l",
    "__iswxdigit_l",
    "towlower_l",
    "towupper_l",
    "wctype_l",
    "__iswctype_l",
    "__wctrans_l",
    "towctrans_l",
    "getspent",
    "getspnam",
    "sgetspent",
    "fgetspent",
    "putspent",
    "setspent",
    "endspent",
    "getspent_r",
    "getspnam_r",
    "_nss_files_parse_spent",
    "sgetspent_r",
    "fgetspent_r",
    "lckpwdf",
    "ulckpwdf",
    "getsgent",
    "getsgnam",
    "sgetsgent",
    "fgetsgent",
    "putsgent",
    "setsgent",
    "endsgent",
    "getsgent_r",
    "getsgnam_r",
    "_nss_files_parse_sgent",
    "sgetsgent_r",
    "fgetsgent_r",
    "argp_failure",
    "argp_help",
    "argp_state_help",
    "argp_error",
    "argp_parse",
    "argp_usage",
    "__backtrace",
    "backtrace_symbols",
    "__backtrace_symbols_fd",
    "__cyg_profile_func_exit",
    "__memcpy_chk",
    "__memmove_chk",
    "__mempcpy_chk",
    "__memset_chk",
    "__stpcpy_chk",
    "__strcat_chk",
    "__strcpy_chk",
    "__strncat_chk",
    "__strncpy_chk",
    "__stpncpy_chk",
    "__sprintf_chk",
    "__vsprintf_chk",
    "__snprintf_chk",
    "__vsnprintf_chk",
    "__printf_chk",
    "__fprintf_chk",
    "__vprintf_chk",
    "__vfprintf_chk",
    "__gets_chk",
    "__chk_fail",
    "__fgets_chk",
    "__fgets_unlocked_chk",
    "__read_chk",
    "__pread_chk",
    "__pread64_chk",
    "__recv_chk",
    "__recvfrom_chk",
    "__readlink_chk",
    "__readlinkat_chk",
    "__getwd_chk",
    "__getcwd_chk",
    "__realpath_chk",
    "__fread_chk",
    "__fread_unlocked_chk",
    "__wctomb_chk",
    "__wcscpy_chk",
    "__wmemcpy_chk",
    "__wmemmove_chk",
    "__wmempcpy_chk",
    "__wcpcpy_chk",
    "__wcsncpy_chk",
    "__wcscat_chk",
    "__wcsncat_chk",
    "__wmemset_chk",
    "__wcpncpy_chk",
    "__swprintf_chk",
    "__vswprintf_chk",
    "__wprintf_chk",
    "__fwprintf_chk",
    "__vwprintf_chk",
    "__vfwprintf_chk",
    "__fgetws_chk",
    "__fgetws_unlocked_chk",
    "__confstr_chk",
    "__getgroups_chk",
    "__ttyname_r_chk",
    "__gethostname_chk",
    "__getdomainname_chk",
    "__wcrtomb_chk",
    "__mbsnrtowcs_chk",
    "__wcsnrtombs_chk",
    "__mbsrtowcs_chk",
    "__wcsrtombs_chk",
    "__mbstowcs_chk",
    "__wcstombs_chk",
    "__asprintf_chk",
    "__vasprintf_chk",
    "__dprintf_chk",
    "__vdprintf_chk",
    "__obstack_printf_chk",
    "__obstack_vprintf_chk",
    "__longjmp_chk",
    "__fdelt_chk",
    "__poll_chk",
    "__ppoll_chk",
    "__explicit_bzero_chk",
    "__stack_chk_fail",
    "__fortify_fail",
    "ntohl",
    "ntohs",
    "inet_lnaof",
    "inet_makeaddr",
    "inet_netof",
    "inet_ntoa",
    "inet_network",
    "__h_errno_location",
    "gethostbyaddr",
    "gethostbyaddr_r",
    "gethostbyname",
    "gethostbyname2",
    "gethostbyname2_r",
    "gethostbyname_r",
    "gethostent",
    "sethostent",
    "endhostent",
    "gethostent_r",
    "getnetbyaddr",
    "getnetbyaddr_r",
    "getnetbyname",
    "getnetent",
    "setnetent",
    "endnetent",
    "getnetent_r",
    "getnetbyname_r",
    "getprotobynumber",
    "getprotobynumber_r",
    "getprotoent",
    "setprotoent",
    "endprotoent",
    "getprotoent_r",
    "getprotobyname",
    "getprotobyname_r",
    "getservbyname",
    "getservbyname_r",
    "getservbyport",
    "getservbyport_r",
    "getservent",
    "setservent",
    "endservent",
    "getservent_r",
    "ether_aton",
    "ether_aton_r",
    "ether_hostton",
    "ether_line",
    "ether_ntoa",
    "ether_ntoa_r",
    "ether_ntohost",
    "rresvport_af",
    "rcmd_af",
    "rcmd",
    "rresvport",
    "ruserok_af",
    "ruserok",
    "iruserok_af",
    "iruserok",
    "__ivaliduser",
    "rexec_af",
    "rexec",
    "ruserpass",
    "__internal_setnetgrent",
    "setnetgrent",
    "__internal_endnetgrent",
    "endnetgrent",
    "__internal_getnetgrent_r",
    "getnetgrent_r",
    "innetgr",
    "getnetgrent",
    "setaliasent",
    "endaliasent",
    "getaliasent_r",
    "getaliasent",
    "getaliasbyname",
    "getaliasbyname_r",
    "getnameinfo",
    "if_nametoindex",
    "if_freenameindex",
    "if_nameindex",
    "if_indextoname",
    "getifaddrs",
    "freeifaddrs",
    "inet6_option_space",
    "inet6_option_init",
    "inet6_option_append",
    "inet6_option_alloc",
    "inet6_option_next",
    "inet6_option_find",
    "getipv4sourcefilter",
    "setipv4sourcefilter",
    "getsourcefilter",
    "setsourcefilter",
    "inet6_opt_init",
    "inet6_opt_append",
    "inet6_opt_finish",
    "inet6_opt_set_val",
    "inet6_opt_next",
    "inet6_opt_find",
    "inet6_opt_get_val",
    "inet6_rth_space",
    "inet6_rth_init",
    "inet6_rth_add",
    "inet6_rth_reverse",
    "inet6_rth_segments",
    "inet6_rth_getaddr",
    "__inet6_scopeid_pton",
    "__idna_to_dns_encoding",
    "__idna_from_dns_encoding",
    "__netlink_assert_response",
    "herror",
    "hstrerror",
    "__inet_aton_exact",
    "inet_aton",
    "inet_addr",
    "inet_ntop",
    "__inet_pton_length",
    "inet_pton",
    "inet_nsap_addr",
    "inet_nsap_ntoa",
    "__res_ninit",
    "__res_init",
    "__res_state",
    "__res_randomid",
    "__res_iclose",
    "__res_nclose",
    "__resolv_context_get",
    "__resolv_context_get_preinit",
    "__resolv_context_get_override",
    "__resolv_context_put",
    "__gai_sigqueue",
    "__nss_database_lookup2",
    "__nss_configure_lookup",
    "__nss_lookup_function",
    "__nss_lookup",
    "__nss_next2",
    "__nss_disable_nscd",
    "__nss_hostname_digits_dots",
    "__nss_services_lookup2",
    "__nss_hosts_lookup2",
    "__nss_group_lookup2",
    "__nss_passwd_lookup2",
    "__nss_hash",
    "authnone_create",
    "xdr_authunix_parms",
    "bindresvport",
    "clntraw_create",
    "callrpc",
    "_rpc_dtablesize",
    "getrpcport",
    "pmap_set",
    "pmap_unset",
    "pmap_getmaps",
    "xdr_pmap",
    "xdr_pmaplist",
    "xdr_rmtcallres",
    "xdr_rmtcall_args",
    "pmap_rmtcall",
    "clnt_broadcast",
    "xdr_rejected_reply",
    "xdr_accepted_reply",
    "xdr_opaque_auth",
    "xdr_des_block",
    "xdr_replymsg",
    "xdr_callhdr",
    "_seterr_reply",
    "xdr_callmsg",
    "_authenticate",
    "svcraw_create",
    "registerrpc",
    "xdr_float",
    "xdr_double",
    "xdrrec_create",
    "xdrrec_skiprecord",
    "xdrrec_eof",
    "xdrrec_endofrecord",
    "getpublickey",
    "getsecretkey",
    "xdr_authdes_cred",
    "xdr_authdes_verf",
    "cbc_crypt",
    "ecb_crypt",
    "des_setparity",
    "xdr_keystatus",
    "xdr_keybuf",
    "xdr_netnamestr",
    "xdr_cryptkeyarg",
    "xdr_cryptkeyarg2",
    "xdr_cryptkeyres",
    "xdr_unixcred",
    "xdr_getcredres",
    "xdr_key_netstarg",
    "xdr_key_netstres",
    "rtime",
    "authdes_getucred",
    "getrpcent",
    "getrpcbyname",
    "getrpcbynumber",
    "setrpcent",
    "endrpcent",
    "getrpcent_r",
    "getrpcbyname_r",
    "getrpcbynumber_r",
    "clntunix_create",
    "svcunix_create",
    "svcunixfd_create",
    "authdes_pk_create",
    "authdes_create",
    "authunix_create",
    "authunix_create_default",
    "clnt_create",
    "clnt_sperror",
    "clnt_perror",
    "clnt_sperrno",
    "clnt_perrno",
    "clnt_spcreateerror",
    "clnt_pcreateerror",
    "clnttcp_create",
    "__libc_clntudp_bufcreate",
    "clntudp_bufcreate",
    "clntudp_create",
    "get_myaddress",
    "key_setsecret",
    "key_secretkey_is_set",
    "key_encryptsession",
    "key_decryptsession",
    "key_encryptsession_pk",
    "key_decryptsession_pk",
    "key_gendes",
    "key_setnet",
    "key_get_conv",
    "user2netname",
    "host2netname",
    "getnetname",
    "netname2user",
    "netname2host",
    "__libc_rpc_getport",
    "pmap_getport",
    "__rpc_thread_svc_fdset",
    "__rpc_thread_createerr",
    "__rpc_thread_svc_pollfd",
    "__rpc_thread_svc_max_pollfd",
    "xprt_register",
    "xprt_unregister",
    "svc_register",
    "svc_unregister",
    "svc_sendreply",
    "svcerr_noproc",
    "svcerr_decode",
    "svcerr_systemerr",
    "svcerr_auth",
    "svcerr_weakauth",
    "svcerr_noprog",
    "svcerr_progvers",
    "svc_getreq_common",
    "svc_getreqset",
    "svc_getreq_poll",
    "svc_getreq",
    "svctcp_create",
    "svcfd_create",
    "svcudp_bufcreate",
    "svcudp_create",
    "svcudp_enablecache",
    "passwd2des",
    "xencrypt",
    "xdecrypt",
    "xdr_array",
    "xdr_vector",
    "xdr_free",
    "xdr_void",
    "xdr_int",
    "xdr_u_int",
    "xdr_long",
    "xdr_u_long",
    "xdr_hyper",
    "xdr_u_hyper",
    "xdr_longlong_t",
    "xdr_u_longlong_t",
    "xdr_short",
    "xdr_u_short",
    "xdr_char",
    "xdr_u_char",
    "xdr_bool",
    "xdr_enum",
    "xdr_opaque",
    "xdr_bytes",
    "xdr_netobj",
    "xdr_union",
    "xdr_string",
    "xdr_wrapstring",
    "xdr_int64_t",
    "xdr_quad_t",
    "xdr_uint64_t",
    "xdr_u_quad_t",
    "xdr_int32_t",
    "xdr_uint32_t",
    "xdr_int16_t",
    "xdr_uint16_t",
    "xdr_int8_t",
    "xdr_uint8_t",
    "xdrmem_create",
    "xdr_reference",
    "xdr_pointer",
    "xdr_sizeof",
    "xdrstdio_create",
    "svc_exit",
    "svc_run",
    "getlogin",
    "getlogin_r",
    "setlogin",
    "__getlogin_r_chk",
    "getutent",
    "setutent",
    "getutent_r",
    "pututline",
    "endutent",
    "getutid",
    "getutline",
    "getutid_r",
    "getutline_r",
    "utmpname",
    "updwtmp",
    "posix_openpt",
    "getpt",
    "grantpt",
    "unlockpt",
    "ptsname",
    "ptsname_r",
    "__ptsname_r_chk",
    "setutxent",
    "getutxent",
    "endutxent",
    "getutxid",
    "getutxline",
    "pututxline",
    "utmpxname",
    "updwtmpx",
    "getutmpx",
    "dl_iterate_phdr",
    "_dl_addr",
    "_dl_mcount_wrapper",
    "_dl_mcount_wrapper_check",
    "__libc_dlopen_mode",
    "__libc_dlsym",
    "__libc_dlvsym",
    "__libc_dlclose",
    "_dl_vsym",
    "_dl_sym",
    "_dl_signal_exception",
    "_dl_signal_error",
    "_dl_catch_exception",
    "_dl_catch_error",
    "__sigismember",
    "__sigaddset",
    "__sigdelset",
    "quick_exit",
    "realpath",
    "_IO_vfscanf",
    "pthread_cond_broadcast",
    "pthread_cond_destroy",
    "pthread_cond_init",
    "pthread_cond_signal",
    "pthread_cond_wait",
    "pthread_cond_timedwait",
    "malloc_get_state",
    "malloc_set_state",
    "stime",
    "regexec",
    "glob",
    "sched_getaffinity",
    "sched_setaffinity",
    "posix_spawn",
    "posix_spawnp",
    "fattach",
    "fdetach",
    "getmsg",
    "getpmsg",
    "isastream",
    "putmsg",
    "putpmsg",
    "nftw",
    "step",
    "advance",
    "__nss_group_lookup",
    "__nss_next",
    "__nss_database_lookup",
    "__libc_freeres",
    "__tls_get_addr",
    "_dl_exception_create",
    "__tunable_get_val",
    "_dl_find_dso_for_object",
    "UnresolvableJumpTarget",
    "UnresolvableCallTarget",
    "read",
    "write",
    "close",
    "stat",
    "fstat",
    "lstat",
    "poll",
    "lseek",
    "mmap",
    "mprotect",
    "munmap",
    "brk",
    "rt_sigaction",
    "rt_sigprocmask",
    "rt_sigreturn",
    "ioctl",
    "pread64",
    "pwrite64",
    "readv",
    "writev",
    "access",
    "pipe",
    "select",
    "sched_yield",
    "mremap",
    "msync",
    "mincore",
    "madvise",
    "shmget",
    "shmat",
    "shmctl",
    "dup",
    "dup2",
    "pause",
    "getitimer",
    "alarm",
    "setitimer",
    "getpid",
    "sendfile",
    "socket",
    "connect",
    "accept",
    "sendto",
    "recvfrom",
    "sendmsg",
    "recvmsg",
    "shutdown",
    "bind",
    "listen",
    "getsockname",
    "getpeername",
    "socketpair",
    "setsockopt",
    "getsockopt",
    "clone",
    "vfork",
    "execve",
    "exit",
    "wait4",
    "kill",
    "uname",
    "semget",
    "semctl",
    "shmdt",
    "msgget",
    "msgsnd",
    "msgrcv",
    "msgctl",
    "fcntl",
    "flock",
    "fsync",
    "fdatasync",
    "truncate",
    "ftruncate",
    "getcwd",
    "chdir",
    "fchdir",
    "rename",
    "mkdir",
    "rmdir",
    "creat",
    "link",
    "unlink",
    "symlink",
    "readlink",
    "chmod",
    "fchmod",
    "chown",
    "fchown",
    "lchown",
    "umask",
    "gettimeofday",
    "getrusage",
    "sysinfo",
    "times",
    "ptrace",
    "getuid",
    "syslog",
    "getgid",
    "setuid",
    "setgid",
    "geteuid",
    "getegid",
    "setpgid",
    "getppid",
    "getpgrp",
    "setsid",
    "setreuid",
    "setregid",
    "getgroups",
    "setgroups",
    "setresuid",
    "getresuid",
    "setresgid",
    "getresgid",
    "getpgid",
    "setfsuid",
    "setfsgid",
    "getsid",
    "capget",
    "capset",
    "rt_sigpending",
    "rt_sigtimedwait",
    "rt_sigqueueinfo",
    "rt_sigsuspend",
    "sigaltstack",
    "utime",
    "mknod",
    "uselib",
    "personality",
    "ustat",
    "statfs",
    "fstatfs",
    "getpriority",
    "setpriority",
    "sched_setparam",
    "sched_getparam",
    "sched_setscheduler",
    "sched_getscheduler",
    "sched_get_priority_max",
    "sched_get_priority_min",
    "sched_rr_get_interval",
    "mlock",
    "munlock",
    "mlockall",
    "munlockall",
    "vhangup",
    "modify_ldt",
    "pivot_root",
    "prctl",
    "arch_prctl",
    "chroot",
    "sync",
    "acct",
    "settimeofday",
    "mount",
    "umount2",
    "swapon",
    "swapoff",
    "reboot",
    "sethostname",
    "setdomainname",
    "iopl",
    "ioperm",
    "create_module",
    "init_module",
    "delete_module",
    "get_kernel_syms",
    "query_module",
    "quotactl",
    "nfsservctl",
    "gettid",
    "readahead",
    "setxattr",
    "lsetxattr",
    "fsetxattr",
    "getxattr",
    "lgetxattr",
    "fgetxattr",
    "listxattr",
    "llistxattr",
    "flistxattr",
    "removexattr",
    "lremovexattr",
    "fremovexattr",
    "time",
    "futex",
    "sched_setaffinity",
    "sched_getaffinity",
    "epoll_create",
    "remap_file_pages",
    "getdents64",
    "semtimedop",
    "fadvise64",
    "clock_settime",
    "clock_gettime",
    "clock_getres",
    "clock_nanosleep",
    "epoll_wait",
    "epoll_ctl",
    "tgkill",
    "utimes",
    "waitid",
    "inotify_init",
    "inotify_add_watch",
    "inotify_rm_watch",
    "openat",
    "mkdirat",
    "mknodat",
    "fchownat",
    "futimesat",
    "newfstatat",
    "unlinkat",
    "renameat",
    "linkat",
    "symlinkat",
    "readlinkat",
    "fchmodat",
    "faccessat",
    "pselect6",
    "ppoll",
    "unshare",
    "splice",
    "tee",
    "sync_file_range",
    "vmsplice",
    "utimensat",
    "epoll_pwait",
    "timerfd_create",
    "fallocate",
    "timerfd_settime",
    "timerfd_gettime",
    "accept4",
    "signalfd4",
    "eventfd2",
    "epoll_create1",
    "dup3",
    "pipe2",
    "inotify_init1",
    "preadv",
    "pwritev",
    "recvmmsg",
    "fanotify_init",
    "fanotify_mark",
    "prlimit64",
    "name_to_handle_at",
    "open_by_handle_at",
    "clock_adjtime",
    "syncfs",
    "sendmmsg",
    "setns",
    "getcpu",
    "process_vm_readv",
    "process_vm_writev",
    "renameat2",
    "getrandom",
    "memfd_create",
    "execveat",
    "mlock2",
    "copy_file_range",
    "preadv2",
    "pwritev2",
    "pkey_mprotect",
    "pkey_alloc",
    "pkey_free",
    "statx",
    "sys_718",
    "free",
    "_dl_catch_exception",
    "malloc",
    "_dl_signal_exception",
    "calloc",
    "realloc",
    "_dl_signal_error",
    "_dl_catch_error",
    "_start",
    "_dl_rtld_di_serinfo",
    "_dl_debug_state",
    "_dl_mcount",
    "_dl_get_tls_static_info",
    "_dl_allocate_tls_init",
    "_dl_allocate_tls",
    "_dl_deallocate_tls",
    "_dl_make_stack_executable",
    "_dl_find_dso_for_object",
    "_dl_exception_create",
    "_dl_exception_create_format",
    "_dl_exception_free",
    "__tunable_get_val",
    "__tls_get_addr",
    "__get_cpu_features",
    "malloc",
    "calloc",
    "free",
    "realloc",
    "_dl_signal_exception",
    "_dl_signal_error",
    "_dl_catch_exception",
    "_dl_catch_error",
    "_dl_rtld_lock_recursive",
    "_dl_rtld_unlock_recursive",
    "UnresolvableJumpTarget",
    "UnresolvableCallTarget",
    "read",
    "write",
    "close",
    "stat",
    "fstat",
    "lstat",
    "lseek",
    "mmap",
    "mprotect",
    "munmap",
    "brk",
    "rt_sigaction",
    "rt_sigreturn",
    "pread64",
    "writev",
    "access",
    "setitimer",
    "getpid",
    "uname",
    "fcntl",
    "getcwd",
    "readlink",
    "arch_prctl",
    "futex",
    "getdents64",
    "openat",
    "newfstatat",
    "sys_718",
]
if __name__ == "__main__":
    main(parseargv(sys.argv[1:]))
